CREATE TABLE MANUFACTURER (
    manufacturer_id NUMBER DEFAULT manufacturer_seq.NEXTVAL PRIMARY KEY,
    NAME VARCHAR2(50) NOT NULL,
    COUNTRY VARCHAR2(50),
    FOUNDED_DATE DATE
);

CREATE TABLE CAR_CATEGORY (
    CATEGORY_CODE VARCHAR2(3) PRIMARY KEY,
    DESCRIPTION VARCHAR2(50) NOT NULL,
    DAILY_RATE_MULTIPLIER NUMBER(3, 2) DEFAULT 1.00
);

CREATE TABLE MODEL (
    MODEL_ID NUMBER DEFAULT model_seq.NEXTVAL PRIMARY KEY,
    MANUFACTURER_ID NUMBER REFERENCES MANUFACTURER(MANUFACTURER_ID),
    MODEL_NAME VARCHAR2(50) NOT NULL,
    ENGINE_SIZE NUMBER,
    CATEGORY_CODE VARCHAR2(3) REFERENCES CAR_CATEGORY(CATEGORY_CODE),
    SEATS NUMBER DEFAULT 5,
    FUEL_TYPE VARCHAR2(20) CHECK (FUEL_TYPE IN ('Petrol', 'Diesel', 'Hybrid', 'Electric'))
);

CREATE TABLE LOCATION (
    LOCATION_ID NUMBER DEFAULT location_seq.NEXTVAL PRIMARY KEY,
    LOCATION_NAME VARCHAR2(50),
    ADDRESS_LINE1 VARCHAR2(100) NOT NULL,
    CITY VARCHAR2(50) NOT NULL,
    PHONE VARCHAR2(20) NOT NULL,
    OPENING_HOURS VARCHAR2(100) DEFAULT '08:00-20:00'
);

CREATE TABLE CUSTOMER (
    CUSTOMER_ID NUMBER DEFAULT customer_seq.NEXTVAL PRIMARY KEY,
    FIRST_NAME VARCHAR2(50) NOT NULL,
    LAST_NAME VARCHAR2(50) NOT NULL,
    CPR_PASSPORT VARCHAR2(20) NOT NULL UNIQUE,
    PHONE VARCHAR2(20) NOT NULL,
    STREET VARCHAR2(100) NOT NULL,
    BLOCK VARCHAR2(10) NOT NULL,
    CITY VARCHAR2(50) NOT NULL,
    EMAIL VARCHAR2(100) NOT NULL UNIQUE,
    REGISTRATION_DATE DATE DEFAULT SYSDATE,
    LOYALTY_POINTS NUMBER DEFAULT 0
);

CREATE TABLE CAR (
    REGISTRATION VARCHAR2(20) PRIMARY KEY,
    MODEL_ID NUMBER REFERENCES MODEL(MODEL_ID),
    YEAR_MANUFACTURED NUMBER NOT NULL,
    COLOR VARCHAR2(20) NOT NULL,
    MILEAGE NUMBER DEFAULT 0,
    DAILY_RATE NUMBER(10, 2) NOT NULL,
    STATUS VARCHAR2(20) DEFAULT 'AVAILABLE' CHECK (STATUS IN ('AVAILABLE', 'RENTED', 'MAINTENANCE')),
    LOCATION_ID NUMBER REFERENCES LOCATION(LOCATION_ID),
    LAST_SERVICE_DATE DATE,
    NEXT_SERVICE_MILEAGE NUMBER
);

CREATE TABLE EXTRA_EQUIPMENT (
    EQUIPMENT_ID NUMBER DEFAULT equipment_seq.NEXTVAL PRIMARY KEY,
    DESCRIPTION VARCHAR2(100) NOT NULL,
    DAILY_PRICE NUMBER(10, 2) NOT NULL,
    QUANTITY NUMBER DEFAULT 0,
    REORDER_THRESHOLD NUMBER DEFAULT 5
);

CREATE TABLE RENTAL (
    RENTAL_ID NUMBER DEFAULT rental_seq.NEXTVAL PRIMARY KEY,
    CUSTOMER_ID NUMBER REFERENCES CUSTOMER(CUSTOMER_ID),
    CAR_REGISTRATION VARCHAR2(20) REFERENCES CAR(REGISTRATION),
    START_DATE DATE NOT NULL,
    END_DATE DATE NOT NULL,
    ACTUAL_RETURN_DATE DATE,
    TOTAL_COST NUMBER(10, 2),
    STATUS VARCHAR2(20) DEFAULT 'CONFIRMED' CHECK (STATUS IN ('CONFIRMED', 'ONGOING', 'CANCELLED', 'COMPLETED')),
    PAYMENT_METHOD VARCHAR2(20),
    DISCOUNT_AMOUNT NUMBER(10, 2) DEFAULT 0
);

CREATE TABLE RENTAL_EQUIPMENT (
    RENTAL_ID NUMBER REFERENCES RENTAL(RENTAL_ID),
    EQUIPMENT_ID NUMBER REFERENCES EXTRA_EQUIPMENT(EQUIPMENT_ID),
    QUANTITY NUMBER DEFAULT 1,
    PRIMARY KEY (RENTAL_ID, EQUIPMENT_ID)
);

CREATE TABLE MAINTENANCE_LOG (
    LOG_ID NUMBER DEFAULT maintenance_log_seq.NEXTVAL PRIMARY KEY,
    CAR_REGISTRATION VARCHAR2(20) REFERENCES CAR(REGISTRATION),
    MAINTENANCE_DATE DATE DEFAULT SYSDATE,
    MAINTENANCE_TYPE VARCHAR2(50),
    COST NUMBER(10, 2),
    DESCRIPTION VARCHAR2(500),
    TECHNICIAN VARCHAR2(50)
);
--extra checks for the phone and emil format
ALTER TABLE customer ADD CONSTRAINT chk_phone_format
CHECK (REGEXP_LIKE(phone, '^\(\d{3}\) \d{7,8}$'));
ALTER TABLE customer ADD CONSTRAINT chk_valid_email
CHECK (REGEXP_LIKE(email, '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$'));
